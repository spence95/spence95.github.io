---
layout: post
title:  "The Strategy Pattern"
date:   2017-01-04
categories: design patterns
---

The best way to use patterns is to load your brain with them and
then recognize places in your designs and existing applications where you can
apply them.

The one constant in software development is change
	This hits home. It's the whole reason we even care about architecting software. 
	If software never needed to be changed, we would all care a whole lot less about designing.
	
Identify the aspects of your application that vary and separate them from what stays the same. 
(forms the basis of every design pattern)
	Let's think of a quick example. 
	
Program to an interface, not an implementation
	What are some examples of programming to an implementation?
	
Favor composition over inheritance
	Lets you encapsulate a family of algorithms into their own set of classes
	!Lets you change behavior at runtime
	